version: "3.8"

services:
  django:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
      args:
        VARIANT: 3.10-buster
    command: /start
    env_file:
      - .env
    volumes:
      - .:/django
      # - static_volume:/django/staticfiles
      # - media_volume:/django/mediafiles
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    networks:
      - net
  postgres:
    restart: unless-stopped
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_DB}
    ports:
      - "5434:5432"
    networks:
      - net
  pgadmin:
    restart: always
    image: dpage/pgadmin4
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASS}
    ports:
      - "5050:80"
    networks:
      - net
  redis:
    restart: always
    image: redis:latest
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - net
  celery_worker:
    restart: on-failure
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celeryworker
    volumes:
      - .:/django
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    networks:
      - net
  mongodb:
    restart: unless-stopped
    image: mongo:latest
    volumes:
      - mongodb-data:/data/db
      - mongodb-data:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
    ports:
      - "27017:27017"
    networks:
      - net
networks:
  net:
    driver: bridge
volumes:
  postgres-data: null
  pgadmin-data: null
  mongodb-data: null
  redis-data: null
  # static_volume:
  # media_volume:
