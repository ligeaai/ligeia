version: "3.8"

services:
  # web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       # Update 'VARIANT' to pick an LTS version of Node.js: 18, 16, 14.
  #       # Append -bullseye or -buster to pin to an OS version.
  #       # Use -bullseye variants on local arm64/Apple Silicon.
  #       VARIANT: "18"

  #   volumes:
  #     - ..:/workspace:cached

  #   # Overrides default command so things don't shut down after the process ends.
  #   command: sleep infinity

  #   # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
  #   networks:
  #     - net
  #   # Uncomment the next line to use a non-root user for all processes.
  #   # user: node

  #   # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
  #   # (Adding the "ports" property to this file will not forward from a Codespace.)
  django:
    restart: unless-stopped
    build:
      context: ..
      dockerfile: ./docker/local/django/Dockerfile
      args:
        VARIANT: 3.10-bullseye
    command: /start
    env_file:
      - .env
    volumes:
      - .:/django
      # - static_volume:/django/staticfiles
      # - media_volume:/django/mediafiles
    depends_on:
      - redis
      - postgres
    ports:
      - "8000:8000"
    networks:
      - net
  celery_worker:
    restart: on-failure
    build:
      context: ..
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celeryworker
    volumes:
      - .:/django
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    networks:
      - net
  flower:
    build:
      context: ..
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-flower
    volumes:
      - .:/django
    env_file:
      - .env
    ports:
      - "5557:5555"
    depends_on:
      - redis
      - postgres
    networks:
      - net
  postgres:
    restart: unless-stopped
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_DB}
    ports:
      - "5434:5432"
    networks:
      - net
    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
  pgadmin:
    restart: always
    image: dpage/pgadmin4:latest
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASS}
    ports:
      - "5050:80"
    networks:
      - net
  redis:
    restart: always
    image: redis:latest
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - net
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

networks:
  net:
    driver: bridge

volumes:
  postgres-data: null
  pgadmin-data: null
  redis-data: null
