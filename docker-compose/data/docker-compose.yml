version: "3.8"
services:
  zookeeper:
    hostname: zookeeper
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app_net
  apache-kafka-broker1:
    image: confluentinc/cp-enterprise-kafka:5.3.1
    hostname: broker
    container_name: ligeiaai-apache-kafka-broker-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - app_net
  control-center:
    image: confluentinc/cp-enterprise-control-center:5.3.1
    hostname: control-center
    container_name: ligeiaai-control-center
    depends_on:
      - zookeeper
      - apache-kafka-broker1
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8088'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - app_net
  connect:
    build:
      context: .
      dockerfile: ../../dockerfile/dev/datapipelines/Dockerfile
    container_name: ligeiaai-connect
    hostname: connect
    ports:
      - "8088:8088"
    depends_on:
      - apache-kafka-broker1
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker:29092
      CONNECT_GROUP_ID: "connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config-storage"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offset-storage"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status-storage"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.converters.ByteArrayConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_PLUGIN_PATH: "/usr/share/confluent-hub-components"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_REST_HOST_NAME: "connect"
      CONNECT_REST_PORT: "8088"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.1.1.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
    networks:
      - app_net
  nifi:
    build:
      context: .
      dockerfile: ../../dockerfile/local/datapipline/Nifi/Dockerfile
    restart: unless-stopped
    image: apache/nifi:latest
    env_file:
      - ../.env
    ports:
      - "8081:8081"
    volumes:
      - ../../backend:/datapipline
    environment:
      NIFI_WEB_HTTP_PORT: 8081
      NIFI_CLUSTER_IS_NODE: 'true'
      NIFI_CLUSTER_NODE_PROTOCOL_PORT: 8082
      NIFI_ZK_CONNECT_STRING: "zookeeper:2181"
      NIFI_ELECTION_MAX_WAIT: "1 min"
      NIFI_ZK_ROOT_NODE: "/nifi"
      NIFI_SENSITIVE_PROPS_KEY: '12345678912345'
    depends_on:
      - apache-kafka-broker1
      - zookeeper
    networks:
      - app_net
  rabbitmq:
    image: rabbitmq:3-management
    hostname: localhost
    container_name: ligeiaai-rabbitmq
    ports:
      - '15672:15672'
      - '5672:5672'
    networks:
      - app_net
networks:
  app_net:
    external: true
volumes:
  zookeeper_data: null
  broker_data: null
  connect_data: null
