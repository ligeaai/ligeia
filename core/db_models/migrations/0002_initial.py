# Generated by Django 3.2.8 on 2021-11-28 20:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cities_light', '0011_auto_20211128_2034'),
        ('db_models', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='base_domain',
            name='last_updt_user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last Update User'),
        ),
        migrations.CreateModel(
            name='Engine',
            fields=[
                ('base_equip_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='db_models.base_equip')),
            ],
            bases=('db_models.base_equip',),
        ),
        migrations.CreateModel(
            name='Pump',
            fields=[
                ('base_equip_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='db_models.base_equip')),
                ('metric_system', models.CharField(blank=True, choices=[('IMPERIAL', 'Imperial'), ('METRIC', 'Metric')], db_column='metric_system', max_length=100, null=True, verbose_name='Metric System')),
                ('density', models.DecimalField(blank=True, db_column='density', decimal_places=100, max_digits=1000, null=True)),
                ('temperature', models.DecimalField(blank=True, db_column='temperature', decimal_places=100, max_digits=1000, null=True)),
            ],
            bases=('db_models.base_equip',),
        ),
        migrations.AddField(
            model_name='field',
            name='city',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='region', chained_model_field='region', null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.city', verbose_name='City'),
        ),
        migrations.AddField(
            model_name='field',
            name='company_ref',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_models.company', verbose_name='Company Ref.'),
        ),
        migrations.AddField(
            model_name='field',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.country', verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='field',
            name='region',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='country', chained_model_field='country', null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='field',
            name='subregion',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='region', chained_model_field='region', null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.subregion', verbose_name='Sub-Region'),
        ),
        migrations.AddField(
            model_name='company',
            name='city',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='region', chained_model_field='region', null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.city', verbose_name='City'),
        ),
        migrations.AddField(
            model_name='company',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.country', verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='company',
            name='parent',
            field=models.ManyToManyField(blank=True, to='db_models.Company', verbose_name='Parent Company'),
        ),
        migrations.AddField(
            model_name='company',
            name='region',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='country', chained_model_field='country', null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='company',
            name='subregion',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='region', chained_model_field='region', null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.subregion', verbose_name='Sub-Region'),
        ),
        migrations.AddField(
            model_name='battery',
            name='battery_ref',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_models.battery', verbose_name='Battery Ref.'),
        ),
        migrations.AddField(
            model_name='battery',
            name='company_ref',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_models.company', verbose_name='Company Ref.'),
        ),
        migrations.AddField(
            model_name='battery',
            name='field_ref',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_models.field', verbose_name='Field Ref.'),
        ),
        migrations.AddField(
            model_name='base_equip',
            name='battery_ref',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_models.battery', verbose_name='Battery Ref.'),
        ),
    ]
